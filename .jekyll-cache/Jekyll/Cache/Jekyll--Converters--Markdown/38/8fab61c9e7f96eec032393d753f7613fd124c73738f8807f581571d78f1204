I"><h2 id="정적-메서드">정적 메서드</h2>

<p>클래스의 정적(static) 메서드는 인스턴스를 생성하지 않아도 호출할 수 있는 메서드를 말한다.  메서드에 static을 붙이면 정적 메서드가 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Person</span> <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c1">// 정적 메서드</span>
  <span class="kd">static</span> <span class="nx">sayHi</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hi~</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// 프로토타입 메서드</span>
  <span class="nx">sayName</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>클래스는 함수 객체이므로 자신의 프로퍼티/메서드를 소유할 수 있다.<br />
그 정적 메서드는 <strong>인스턴스로 호출하지 않고 클래스로 호출한다.</strong></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 정적 메서드는 클래스로 호출한다.</span>
<span class="nx">Person</span><span class="p">.</span><span class="nx">sayHi</span><span class="p">();</span> <span class="c1">// Hi~</span>

<span class="c1">// 정적 메서드는 인스턴스로 호출할 수 없다.</span>
<span class="kd">const</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="dl">'</span><span class="s1">kwon</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">me</span><span class="p">.</span><span class="nx">sayHi</span><span class="p">();</span> <span class="c1">// TypeError: me.sayHi is not a function</span>
</code></pre></div></div>

<h2 id="정적-메서드-vs-프로토타입-메서드">정적 메서드 VS 프로토타입 메서드</h2>

<blockquote>
  <ol>
    <li>둘은 자신이 속해 있는 프로토타입 체인이 다르다.</li>
    <li>정적 메서드는 클래스로 호출하고, 프로토타입 메서드는 인스턴스로 호출한다.<br />
(정적 메서드의 this는 클래스이며, 프로토타입 메서드의 this는 인스턴스다)</li>
    <li>정적 메서드는 인스턴스 프로퍼티를 참조할 수 없다.</li>
  </ol>
</blockquote>

<h2 id="더-알아두기">더 알아두기</h2>
<ul>
  <li><strong>this를 사용하지 않는 메서드는 정적 메서드로 정의하는 것이 좋다.</strong></li>
  <li>표준 빌트인 객체인 Math, Number, JSON, Object 등은 다양한 정적 메서드를 가지고 있다.</li>
</ul>

<h2 id="참고문헌">참고문헌</h2>
<p>이웅모, “모던 자바스크립트 Deep Dive”, 위키북스, 2020, pp.430-433</p>

:ET