I"]	<p>요즘 개인 프로젝트를 하면서 절실히 느끼는 것인데, 프로젝트를 진행할수록 CSS 코드가 알아보기 힘들 정도로 난잡해진다. 전체 코드의 길이는 너무 길고, 중복되는 코드가 난무하며, 수정 시 고쳐야할 부분이 한 두 군데가 아니다. 뭔가 잘못되고 있다는 불안감이 마음을 짓누른다. “어떻게 하면 CSS를 더 효율적으로 작성하고 관리할 수 있을까?”라는 고민이 들었다.</p>

<p>바야흐로, CSS의 전처리기 <strong><u>Sass</u></strong>를 도입할 필요가 있다고 생각한다! 그래서 이번 글에서는 Sass의 기본 개념을 정리해보도록 하겠다.</p>

<h3 id="sass-개요">Sass 개요</h3>
<p><img src="https://github.com/gitul0515/gitul0515.github.io/blob/main/_posts/image/22_0131_1.png?raw=true" alt="Sass 로고 이미지" width="80%" style="margin-left: 0" /></p>

<p>(“초능력을 가진 CSS”라는 슬로건이 인상적이다)</p>

<p>Sass(Syntactically Awesome StyleSheets)는 CSS의 전처리기(pre-processor)이다. CSS의 단점을 보완하여 가독성이 뛰어나고 재사용이 높은 CSS를 작성하기 위한 CSS의 확장이다.</p>

<p>상술하였듯이, CSS는 프로젝트의 규모가 커질수록 쉽게 지저분해지고 유지보수가 어려워진다. 이에 Sass는 변수, 조건문, 반복문, Nesting, Mixin 등의 문법을 제공하여 CSS의 한계를 보완한다. Sass는 다음과 같은 장점이 있다.</p>

<blockquote>
  <p>CSS보다 단순한 표기법으로 CSS를 구조화하여 표현한다.<br />
팀원간의 작업 시 발생할 수 있는 구문의 수준 차이를 평준화한다.<br />
Mixin 등의 강력한 기능을 바탕으로 유지보수 편의성을 크게 향상시킨다.</p>
</blockquote>

<h3 id="문법과-예제">문법과 예제</h3>
<h4 id="1-데이터-타입">1. 데이터 타입</h4>
<p>Sass에는 7가지의 데이터 타입이 존재한다.<br />
  1) 숫자형 2) 문자열 3) 컬러 (green, #02a1f9 등)<br />
  4) boolean 5) null (null인 변수가 지정된 프로퍼티는 트랜스파일링X)<br />
  6) list 7) map (key1: value1, key2: value2)</p>

<h4 id="2-변수">2. 변수</h4>

<p>(글 미완성입니다)</p>

<h3 id="참고자료">참고자료</h3>

<p>(제 글에서 틀린 것이 있다면 꼭 지적해 주세요. 감사히 배우겠습니다)</p>
:ET