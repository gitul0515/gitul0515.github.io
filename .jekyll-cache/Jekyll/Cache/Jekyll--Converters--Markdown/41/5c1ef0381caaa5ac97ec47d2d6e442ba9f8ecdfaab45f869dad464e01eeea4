I"{<p>배열 array[l…r]의 중앙값을 반환하는 함수를 간단히 구현하였다.</p>

<h3 id="작성한-코드">작성한 코드</h3>

<p>코드 삽입</p>

<p>선택 정렬 알고리즘을 바탕으로 하였다.<br />
단, 정렬이 목적이 아니라 중앙값을 찾는 것이 목적이므로<br />
<strong>정렬은 중앙값의 인덱스까지만 수행하면 된다.</strong></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">void</span> <span class="nx">insert</span><span class="p">(</span><span class="kd">const</span> <span class="nx">char</span><span class="o">*</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="nx">key</span> <span class="o">==</span> <span class="dl">'</span><span class="se">\</span><span class="s1">0</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">finish</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">int</span> <span class="nx">idx</span> <span class="o">=</span> <span class="o">*</span><span class="nx">key</span> <span class="o">-</span> <span class="dl">'</span><span class="s1">A</span><span class="dl">'</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">next</span><span class="p">[</span><span class="nx">idx</span><span class="p">])</span>
            <span class="nx">next</span><span class="p">[</span><span class="nx">idx</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Trie</span><span class="p">();</span>
        <span class="nx">next</span><span class="p">[</span><span class="nx">idx</span><span class="p">]</span><span class="o">-&gt;</span><span class="nx">insert</span><span class="p">(</span><span class="nx">key</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="장점">장점</h3>
<ol>
  <li>중앙값의 인덱스까지만 정렬하므로<br />
알고리즘의 수행시간을 조금 더 줄일 수 있다.</li>
  <li>전체 배열의 중앙값은 물론이고,<br />
<strong>배열의 부분 범위의 중앙값도 쉽게 구할 수 있다.</strong><br />
(인덱스를 통해 부분 범위를 지정해주면 된다.   참조)</li>
</ol>

<h3 id="단점">단점</h3>
<p>선택정렬을 바탕으로 하였기 때문에,<br />
  시간복잡도가 여전히 O(n^^2)으로 효율적인 알고리즘은 아니다.<br />
  (다른 정렬 알고리즘 또는 sort 메소드를 사용하면 더 좋을 듯 하다)</p>
:ET