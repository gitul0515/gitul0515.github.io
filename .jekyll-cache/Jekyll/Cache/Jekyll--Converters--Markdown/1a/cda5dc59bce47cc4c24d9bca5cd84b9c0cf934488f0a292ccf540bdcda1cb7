I"<p>자바스크립트를 공부할수록 유용하고 편리한 내장 메서드들이 정말 많다는 것을 느낀다. 그 중에서 localeCompare라는 상당히 재미있는(?) 녀석이 있는데, 이번 글에서는 이 녀석에 관한 이야기를 해보고 싶다. 또한, 이 localeCompare을 기존의 sort 메서드에 활용하는 방안을 서술해 보겠다.</p>

<h3 id="localecompare">localeCompare</h3>
<p>localeCompare()는 String 메서드다. 기준 문자열과 비교했을 때 비교되는 문자열이 정렬상 앞에 오는지, 뒤에 오는지, 혹은 같은 순서인지 알려주는 숫자를 리턴한다. 다음과 같이 사용한다.</p>

<p><span style="font-size: 1.1rem">referenceStr.localeCompare(compareString[, locales[, options]])</span></p>

<ol>
  <li>referenceStr이 compareString 보다 정렬상 앞에 오면 <strong><u>음수</u></strong>를 반환한다.</li>
  <li>referenceStr이 compareString 보다 정렬상 뒤에 오면 <strong><u>양수</u></strong>를 반환한다.</li>
  <li>referenceStr이 compareString 보다 정렬상 같은 순서이면 <strong><u>0</u></strong>을 반환한다.</li>
</ol>

<p>예제를 통해서 더 쉽게 이해해보자.</p>

<pre><code class="language-Javascript">'a'.localeCompare('b'); // -1 (또는 다른 음수)

'b'.localeCompare('a'); // 1 (또는 다른 양수)

'a'.localeCompare('a'); // 0
</code></pre>

<p>주석에서 볼 수 있듯이, 음수는 반드시 -1, 양수는 +1이 아니며 다른 숫자일 수도 있다. 이는 브라우저나 버전에 따라 달라질 수 있으므로 유의해야 한다.</p>

<h3 id="sort에-활용">sort에 활용</h3>
<p>나는 이</p>

<p>(제 글에서 틀린 것이 있다면 꼭 지적해 주세요. 감사히 배우겠습니다)</p>

<h3 id="참고자료">참고자료</h3>

:ET