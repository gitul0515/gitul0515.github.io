






문자열을 정렬할 때에는 
각 문자열의 유니 코드 코드 포인트 값에 따라 정렬된다.

그러나 숫자, 객체를 정렬할 때에는
비교 함수 compare가 필요하다.



sort의 비교 함수 compare에 관하여  

자바스크립트에서  
sort 함수로 숫자, 객체 배열을 정렬할 때는  
비교 함수 compare를 인자로 전달해야 한다.  

여기서 비교 함수 compare의  
반환값에 따라 정렬 방식이 다르다.  

1. compare(a, b)의 반환값이 0보다 큰 경우: 오름차순  

2. compare(a, b)의 반환값이 0보다 작은 경우: 내림차순  

3. compare(a, b)의 반환값이 0인 경우: 변경 없음



코드를 간단히 살펴보자.

// 오름차순 정렬
const arr = [ 10, 4, 7 ];
arr.sort((a, b) => a - b); // 4, 7, 10

// 내림차순 정렬
const arr = [ 10, 4, 7 ];
arr.sort((a, b) => b - a); // 10, 7, 4


다음 사실에 주의하자.  
arr.sort((a, b) = a - b)에서 a는 next 요소를, b는 prev 요소를 가리킨다.  

1. 오름차순: arr.sort((next, prev) => next - prev);

next - prev > 0인 경우(prev가 작은 경우), 원래대로 prev가 먼저 온다.
next - prev < 0인 경우(next가 작은 경우), 순서를 바꾸어 next가 먼저 온다.

내림차순: arr.sort((next, prev) => prev - next);

prev - next > 0인 경우(prev가 큰 경우), 원래대로 prev가 먼저 온다.
prev - next < 0인 경우(next가 큰 경우), 순서를 바꾸어 next가 먼저 온다.


약간 복잡하지만, 천천히 살펴보면 어렵지 않다.

# 참고문헌
https://developer.mozilla.org






(객체 배열도 마찬가지. 이건 나중에 정리해본다.
 한편, 문자열 배열은 인자로 전달하지 않아도 된다)




사실 sort 함수를 사용하는데 위와 같은 내부 로직을 할 필요는 없지만 그냥 지나치면 찜찜하단 말이지. 






사실, 위와 같은 내부 로직은 알 





sort 함수는 어떤 방식으로 정렬을 할까? 

{ 4 7 10 }

{ 10 7 4 }


