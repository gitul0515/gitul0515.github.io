---
layout: post
title:  "그래프의 DFS를 활용한 미로찾기 문제"
date:   2021-11-19 11:12:59 +0900
categories: 알고리즘
tags: [자바스크립트] [자료구조] [알고리즘] [그래프]
---
그래프의 깊이우선탐색(DFS)를 활용하여 미로찾기 문제를 풀어보자. 

![미로찾기](https://github.com/gitul0515/gitul0515.github.io/blob/main/_posts/image/21_1120.jpg?raw=true)

먼저 필요한 것은 미로를 그래프로 표현하는 작업이다.
  

**1. 반환값이 0보다 큰 경우: 오름차순**  
**2. 반환값이 0보다 작은 경우: 내림차순**  
**3. 반환값이 0인 경우: 변경 없음**  


내부 로직을 살펴보면,  
arr.sort((a, b) = a - b)에서 a는 next 요소를, b는 prev 요소를 가리킨다.  
(이 점은 약간 의외다. 순서가 반대이므로 주의가 필요)

**오름차순: arr.sort((next, prev) => next - prev);**

next - prev > 0인 경우(prev가 작은 경우), 원래대로 prev가 먼저 온다.  
next - prev < 0인 경우(next가 작은 경우), 순서를 바꾸어 next가 먼저 온다.

**내림차순: arr.sort((next, prev) => prev - next);**

prev - next > 0인 경우(prev가 큰 경우), 원래대로 prev가 먼저 온다.  
prev - next < 0인 경우(next가 큰 경우), 순서를 바꾸어 next가 먼저 온다.  

***-----------------------------------------------------------------------------------------------------------------------------------------***

그러나 sort()를 사용하는데 위와 같은 로직을 구체적으로 알 필요는 없다.  
(그래도 모르면 찜찜하니까 알아두면 좋지)  
  
간단하게 다음과 같이 사용할 수 있다.  
코드를 살펴보면...  

```javascript
// 오름차순 정렬
const arr = [ 10, 4, 7 ];
arr.sort((a, b) => a - b); // 4, 7, 10

// 내림차순 정렬
const arr = [ 10, 4, 7 ];
arr.sort((a, b) => b - a); // 10, 7, 4
```
끝!  
### 참고문헌
https://developer.mozilla.org
